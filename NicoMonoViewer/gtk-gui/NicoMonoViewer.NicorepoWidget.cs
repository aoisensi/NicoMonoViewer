
// This file has been generated by the GUI designer. Do not modify.
namespace NicoMonoViewer
{
	public partial class NicorepoWidget
	{
		private global::Gtk.ScrolledWindow scrolledwindow;
		private global::Gtk.VBox vbox;
		private global::Gtk.VBox vboxMain;
		private global::Gtk.Image imageLoading;
		
		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget NicoMonoViewer.NicorepoWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "NicoMonoViewer.NicorepoWidget";
			// Container child NicoMonoViewer.NicorepoWidget.Gtk.Container+ContainerChild
			this.scrolledwindow = new global::Gtk.ScrolledWindow ();
			this.scrolledwindow.CanFocus = true;
			this.scrolledwindow.Name = "scrolledwindow";
			this.scrolledwindow.HscrollbarPolicy = ((global::Gtk.PolicyType)(0));
			this.scrolledwindow.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child scrolledwindow.Gtk.Container+ContainerChild
			global::Gtk.Viewport w1 = new global::Gtk.Viewport ();
			w1.ShadowType = ((global::Gtk.ShadowType)(0));
			// Container child GtkViewport.Gtk.Container+ContainerChild
			this.vbox = new global::Gtk.VBox ();
			this.vbox.Name = "vbox";
			this.vbox.Spacing = 6;
			// Container child vbox.Gtk.Box+BoxChild
			this.vboxMain = new global::Gtk.VBox ();
			this.vboxMain.Name = "vboxMain";
			this.vboxMain.Spacing = 6;
			this.vbox.Add (this.vboxMain);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox [this.vboxMain]));
			w2.Position = 0;
			// Container child vbox.Gtk.Box+BoxChild
			this.imageLoading = new global::Gtk.Image ();
			this.imageLoading.Name = "imageLoading";
			this.imageLoading.Pixbuf = global::Gdk.Pixbuf.LoadFromResource ("NicoMonoViewer.loading.gif");
			this.vbox.Add (this.imageLoading);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox [this.imageLoading]));
			w3.Position = 1;
			w3.Expand = false;
			w3.Fill = false;
			w1.Add (this.vbox);
			this.scrolledwindow.Add (w1);
			this.Add (this.scrolledwindow);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
			this.Shown += new global::System.EventHandler (this.OnShown);
		}
	}
}
